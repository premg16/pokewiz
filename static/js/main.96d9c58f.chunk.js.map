{"version":3,"sources":["components/Pokemon.js","components/Loader.js","components/Paginate.js","pages/Homepage.js","pages/PokemonPage.js","components/Header.js","App.js","index.js"],"names":["pokemon","Card","className","style","border","to","id","Img","width","src","sprites","other","home","front_default","variant","Body","types","type","name","Title","as","charAt","toUpperCase","slice","Loader","height","Row","Col","Spinner","role","Paginate","gotoNextPage","gotoPrevPage","Button","onClick","Homepage","useState","setPokemon","loading","setLoading","nextcount","setNextCount","prevcount","setPrevCount","pokemonArray","getPokemonList","a","i","count","getPokemonData","push","axios","get","res","useEffect","console","log","map","p","xs","sm","md","lg","xl","Pokemon","data","PokemonPage","match","pokemonDetails","setPokemonDetails","params","getPokemon","details","Text","t","color","abilities","ability","stats","stat","ProgressBar","animated","striped","now","base_stat","label","Header","Navbar","bg","expand","collapseOnSelect","Container","Brand","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96d9c58f.chunk.js","sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nconst pokemon = ({ pokemon }) => {\n\n    return (\n        <>\n            <Card className='my-3 p-3 rounded text-center shadow p-3 mb-3 bg-white rounded' style={{ border: 'none' }}>\n                <Link to={`/pokemon/${pokemon.id}`}>\n                    <Card.Img style={{ width: '8rem' }} src={pokemon.sprites.other.home.front_default} variant='top'/>\n                </Link>\n                <Card.Body className={`${pokemon.types[0].type.name} rounded text-white`}>\n                    <Link to={`/pokemon/${pokemon.name}`} className='link-name'>\n                        <Card.Title as='div'><strong>{pokemon.id}. {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)} </strong></Card.Title>\n                    </Link>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default pokemon;\n\n","import React from 'react'\nimport { Spinner, Col, Row } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <div className='d-flex justify-content-center mt-5' style={{ height: '100vh' }}>\n            <Row>\n                <Col>\n                    <Spinner\n                        className='spinner-border  spinner-border-lg'\n                        role='status'\n                        style={{ height: '5vh', width: '5vh' }}\n                    >\n                    </Spinner>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <div className='mx-3'> Fetching Pokemon...</div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Loader\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nexport default function Paginate({ gotoNextPage, gotoPrevPage }) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {gotoPrevPage && <Button onClick={gotoPrevPage}>Previous</Button>}\r\n                {gotoNextPage && <Button onClick={gotoNextPage}>Next</Button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Row, Col } from 'react-bootstrap'\n\n// Components\nimport Pokemon from '../components/Pokemon'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\n\nconst Homepage = () => {\n\n    const [pokemon, setPokemon] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [nextcount, setNextCount]     = useState()\n    const [prevcount, setPrevCount]     = useState(1)\n    const [nextPageUrl, setNextPageUrl] = useState()\n    const [prevPageUrl, setPrevPageUrl] = useState()\n\n\n    let count = 1\n    let pokemonArray = []\n\n\n    const getPokemonList = async () => {\n        for (let i = count; i < count + 9; i++) {\n            pokemonArray.push(await getPokemonData(i))\n        }\n        setPokemon(pokemonArray)\n        setLoading(false)\n        setNextCount(count+9)\n        setPrevCount(1)\n    }\n\n    const getPokemonData = async (id) => {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n        return res\n    }\n\n    useEffect(() => {\n        getPokemonList()\n    }, [])\n\n    const gotoNextPage = async () => {\n        setLoading(true)\n        setPrevCount(nextcount)\n        for (let i = nextcount; i < nextcount + 9; i++) {\n            pokemonArray.push(await getPokemonData(i))\n        }\n        setPokemon(pokemonArray)\n        setLoading(false)\n        setNextCount(nextcount+9)\n        console.log(nextcount)\n        console.log(prevcount)\n    }\n\n    const gotoPrevPage = async () => {\n        setLoading(true)\n        setNextCount(prevcount)\n        for (let i = prevcount; i < prevcount + 9; i++) {\n            pokemonArray.push(await getPokemonData(i))\n        }\n        setPokemon(pokemonArray)\n        setLoading(false)\n        setPrevCount()\n        console.log(nextcount)\n        console.log(prevcount)\n    }\n\n    return (\n        <>\n            {loading ? (\n                <Loader />\n            ) : (\n                <Row>\n                    {pokemon.map(p => (\n                        <Col key={p.data.name} xs={12} sm={12} md={4} lg={4} xl={4}>\n                            <Pokemon pokemon={p.data} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n            <Paginate\n                gotoNextPage={gotoNextPage}\n                gotoPrevPage={gotoPrevPage}\n            />\n        </>\n    )\n}\n\nexport default Homepage\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Card, Row, Col, ProgressBar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\n// Components\nimport Loader from '../components/Loader'\n\nconst PokemonPage = ({ match }) => {\n\n    const [pokemonDetails, setPokemonDetails] = useState()\n    const [loading, setLoading] = useState(true)\n\n    const id = match.params.id\n\n    const getPokemon = async (id) => {\n        const details = await getPokemonData(id)\n        setPokemonDetails(details.data)\n        setLoading(false)\n    }\n\n    const getPokemonData = async (id) => {\n        const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\n        return res\n    }\n\n    useEffect(() => {\n        getPokemon(id)\n    }, [])\n\n    return (\n        <>\n            {loading ? (\n                <Loader/>\n            ) : (\n                <Row>\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                        <Card className='my-3 p-3 rounded text-center shadow p-3 mb-5 bg-white' style={{ border: 'none' }}>\n                            <Link to={`/pokemon/${pokemonDetails.id}`}>\n                                <Card.Img style={{ width: '15rem' }} src={pokemonDetails.sprites.other.home.front_default} variant='top'/>\n                            </Link>\n                            <Card.Body className={`${pokemonDetails.types[0].type.name} rounded text-white`}>\n                                <Link to={`/pokemon/${pokemonDetails.name}`} className='link-name'>\n                                    <Card.Title as='div'>\n                                        <strong>#{pokemonDetails.id} {pokemonDetails.name.charAt(0).toUpperCase() + pokemonDetails.name.slice(1)}</strong>\n                                    </Card.Title>\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n                        <Card className='p-3 rounded shadow p-3 mb-5 bg-white' style={{ border: 'none' }}>\n                            <Card.Body>\n                                <Card.Text>\n                                    <Row className='text-center'>\n                                        {pokemonDetails.types.map(t => (\n                                            <Col key={t.type.name}>\n                                                <div className={`${t.type.name} rounded px-4 py-1`} style={{ color: 'white' }}>\n                                                    {t.type.name.toUpperCase()}\n                                                </div>\n                                            </Col>\n                                        ))}\n                                    </Row>\n                                    <Row className='mt-4 text-center'>\n                                        <Col  xs={6} sm={6} md={6} lg={6} xl={6}>\n                                            <div className='px-4 py-1 rounded' style={{ border: '1px black solid' }}>Abilities</div>\n                                        </Col>\n                                    {/* </Row>\n                                    <Row className='mt-4'> */}\n                                        <Col  xs={6} sm={6} md={6} lg={6} xl={6}>\n                                            <div className='px-4 py-1 rounded' style={{ border: '1px black solid' }}>Stats</div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                        {pokemonDetails.abilities.map(a => (\n                                            <Col key={a.ability.name} xs={6} sm={6} md={6} lg={6} xl={6}>\n                                                <div className={`rounded px-4 py-1 font-weight-bold`}>\n                                                    {a.ability.name.toUpperCase()}\n                                                </div>\n                                            </Col>\n                                        ))}\n                                        </Col>\n                                        <Col>\n                                        {pokemonDetails.stats.map(a => (\n                                            <Col key={a.stat.name} xs={6} sm={6} md={6} lg={6} xl={6}>\n                                                <div className={`rounded px-4 py-1`}>\n                                                    <Col> {a.stat.name.toUpperCase()} : </Col>\n                                                    <Col> <ProgressBar animated variant=\"success\" striped now={`${a.base_stat}`} label={`${a.base_stat}%`} /> </Col>\n                                                    \n                                                </div>\n                                            </Col>\n                                        ))}\n                                        </Col>    \n                                    </Row>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            )}\n        </>\n    )\n}\n\nexport default PokemonPage\n","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Container } from 'react-bootstrap'\n\nconst Header = () => {\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/home\">\n                        <Navbar.Brand>PokeWiz</Navbar.Brand>\n                    </LinkContainer>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n// Pages\nimport Homepage from './pages/Homepage';\nimport PokemonPage from './pages/PokemonPage';\n\n// Components\nimport Header from './components/Header';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header/>\n      <Container>\n        <Route exact path='/home/' component={Homepage} />\n        <Route path='/pokemon/:id/' component={PokemonPage}/>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport {HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}